# This is a basic workflow to help you get started with Actions
name: build

# Controls when the workflow will run
on: [push,workflow_dispatch]
# Allows you to run this workflow manually from the Actions tab

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  install:
    name: Chocolatey Package
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Get latest version
      run: |
        VER=$(curl https://api.github.com/repos/RocketChat/Rocket.Chat.Electron/releases/latest | jq '.["tag_name"]' | tr -d \")
        echo "version=$VER" >> $GITHUB_ENV
    - name: Get file hash
      run: |
        VERSION=${{ env.version }}
        wget https://github.com/RocketChat/Rocket.Chat.Electron/releases/download/${{ env.version }}/rocketchat-${{ env.version }}-win-x64.exe
        HASH=$(sha256sum rocketchat-${{ env.version }}-win-x64.exe | awk "{print \$1}")
        echo "hash=$HASH" >> $GITHUB_ENV

    - name: Echo hash
      run: |
        ls

    - name: Echo version
      run: |
        echo ${{ env.version }}

    - name: Echo version
      run: |
        echo ${{ env.version }}





  #build_choco:
  #  name: Build Chocolatey locally
  #  runs-on: ubuntu-latest
  #  steps:
  #  - uses: actions/checkout@v3
  #    with:
  #      repository: chocolatey/choco
  #      ref: stable
  #
  #  - name: Build with mono
  #    run: |
  #      chmod +x build.sh
  #      $GITHUB_WORKSPACE/build.sh -v
  #    env:
  #       API_KEY: ${{ secrets.API_KEY }}
  #
  #choco_pack:
  #  name: Choco packaging
  #  runs-on: ubuntu-latest
  #  steps:
  #  - uses: actions/checkout@v3
  #
  #  - name: Build 
  #    run: 
  #    env:
  #       API_KEY: ${{ secrets.API_KEY }}
    - name: Choco help
      uses: crazy-max/ghaction-chocolatey@v2
      with:
        args: -h
