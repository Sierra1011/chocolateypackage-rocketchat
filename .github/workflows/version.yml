name: Update Version

on: 
  schedule:
    - cron:  '00 * * * *'
  push:
  workflow_dispatch:
    
jobs:
  
  update_latest:
    name: Update version
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Get latest version
      run: |
        VER=$(curl https://api.github.com/repos/RocketChat/Rocket.Chat.Electron/releases/latest | jq '.["tag_name"]' | tr -d \")
        echo "version=$VER" >> $GITHUB_ENV

    - name: Get file hash
      run: |
        VERSION=${{ env.version }}
        wget --no-verbose https://github.com/RocketChat/Rocket.Chat.Electron/releases/download/${{ env.version }}/rocketchat-${{ env.version }}-win-x64.exe
        HASH=$(sha256sum rocketchat-${{ env.version }}-win-x64.exe | awk "{print \$1}")
        echo "hash=$HASH" >> $GITHUB_ENV

    - name: Make install script
      run: |
        cat <<EOF > tools/chocolateyinstall.ps1
        \$ErrorActionPreference = 'Stop';
        Install-ChocolateyPackage -packageName 'rocketchat' -FileType exe -SilentArgs '/S /allusers' -Url 'https://github.com/RocketChat/Rocket.Chat.Electron/releases/download/${{ env.version }}/rocketchat-${{ env.version }}-win-x64.exe' -checksum '${{ env.hash }}' -checksumType 'sha256'
        EOF

    - name: Make nuspec
      run: |
        cat << EOF > rocketchat.nuspec
        <?xml version="1.0" encoding="utf-8"?>
        <package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
          <metadata>
            <id>rocketchat</id>
            <version>${{ env.version }}</version>
            <packageSourceUrl>https://github.com/Sierra1011/chocolateypackage-rocketchat</packageSourceUrl>
            <owners>Sierra1011</owners>
            <title>Rocket.Chat</title>
            <authors>Rocket.Chat</authors>
            <projectUrl>https://rocket.chat/ </projectUrl>
            <iconUrl>https://github.com/RocketChat/Rocket.Chat.Artwork/blob/master/Logos/icon.svg</iconUrl>
            <licenseUrl>https://github.com/RocketChat/Rocket.Chat.Electron/blob/develop/LICENSE</licenseUrl>
            <requireLicenseAcceptance>true</requireLicenseAcceptance>
            <projectSourceUrl>https://github.com/RocketChat/Rocket.Chat.Electron</projectSourceUrl>
            <mailingListUrl>https://rocket.chat/contact</mailingListUrl>
            <bugTrackerUrl>https://github.com/RocketChat/Rocket.Chat.Electron/issues</bugTrackerUrl>
            <tags>rocket.chat rocketchat rocket.chat+ admin chat IM</tags>
            <summary>Official OSX, Windows, and Linux Desktop Clients for Rocket.Chat https://rocket.chat/ </summary>
            <description>
        The ultimate Free Open Source Solution for team communications. 
        Rocket.Chat is free, unlimited and open source. Replace email, HipChat and Slack with the ultimate team chat software solution.
        Communicate and collaborate using team chat and switch to video or audio calls with screen sharing for more efficient teamwork.
        Improve productivity by discussing and sharing ideas, projects and files with real-time or asynchronous team chat.
        With complete access to the source code, you can fully customize, extend or add new functionality to meet your requirements.
        With Rocket.Chat LiveChat you can add real-time chat widgets to any website or mobile app and get more value from your team chat.
        Replace other systems and use one communication platform to save time and money. 
            </description>
            <releaseNotes>

            Release notes found here: https://github.com/RocketChat/Rocket.Chat.Electron/releases/tag/${{ env.version }}

            </releaseNotes>
          </metadata>
          <files>
            <file src="tools\**" target="tools" />
          </files>
        </package>
        EOF
    
    - name: Remove EXE
      run: rm rocketchat*.exe

    - uses: peterjgrainger/action-create-branch@v2.2.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        branch: update-${{ env.version }}

    - name: Commit and push changes
      id: push
      uses: devops-infra/action-commit-push@v0.9.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        commit_message: Updated to version ${{ env.version }}

    - name: Create PR
      if: steps.meta.outputs.files_changed > 0
      run: gh pr create -B main -H update-${{ env.version }} --title "Update to version ${{ env.version }}" --body 'Created by Github Actions'
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}